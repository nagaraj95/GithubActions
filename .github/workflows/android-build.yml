name: Android Build

on:
  push:
    branches:
      - main
      - staging
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [main, staging, production]

    env:
      BUILD_TYPE: ${{ github.ref_name }}

    steps:
      - name: ${{ github.ref_name }} Checkout code
        uses: actions/checkout@v4

      - name: ${{ github.ref_name }} Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: ${{ github.ref_name }} Install dependencies
        run: yarn install
  
      - name: ${{ github.ref_name }} Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: ${{ github.ref_name }} Build with Gradle
        working-directory: android
        run: ./gradlew build

      # - name:  ${{ github.ref_name }} Decrypt Keystore
      #   run: |
      #     if [ "${{ env.BUILD_TYPE }}" == "main" ]; then
      #       echo "${{ secrets.PROD_KEYSTORE_BASE64 }}" | base64 --decode > my-upload-key.jks
      #       export KEYSTORE_PASSWORD=${{ secrets.PROD_KEYSTORE_PASSWORD }}
      #       export KEY_ALIAS=${{ secrets.PROD_KEY_ALIAS }}
      #       export KEY_PASSWORD=${{ secrets.PROD_KEY_PASSWORD }}
      #     elif [ "${{ env.BUILD_TYPE }}" == "staging" ]; then
      #       echo "${{ secrets.STAGING_KEYSTORE }}" | base64 --decode > keystore.jks
      #       export KEYSTORE_PASSWORD=${{ secrets.STAGING_KEYSTORE_PASSWORD }}
      #     else
      #       echo "${{ secrets.DEVELOPMENT_KEYSTORE }}" | base64 --decode > keystore.jks
      #       export KEYSTORE_PASSWORD=${{ secrets.DEVELOPMENT_KEYSTORE_PASSWORD }}
      #     fi

      - name: ${{ github.ref_name }} Decode keystore
        env:
          KEYSTORE_BASE64:  if [ "${{ env.BUILD_TYPE }}" == "main" ]; then
                            ${{ secrets.PROD_KEYSTORE_BASE64 }}
                             elif [ "${{ env.BUILD_TYPE }}" == "staging" ]; then
                            ${{ secrets.PROD_KEYSTORE_BASE64 }}
                            else
                              ${{ secrets.PROD_KEYSTORE_BASE64 }}
                            fi
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > my-upload-key.jks

      - name: Build APK
        working-directory: android
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PASSWORD: if [ "${{ env.BUILD_TYPE }}" == "main" ]; then
                            ${{ secrets.PROD_KEYSTORE_PASSWORD }}
                             elif [ "${{ env.BUILD_TYPE }}" == "staging" ]; then
                            ${{ secrets.PROD_KEYSTORE_PASSWORD }}
                            else
                              ${{ secrets.PROD_KEYSTORE_PASSWORD }}
                            fi
          KEY_ALIAS: if [ "${{ env.BUILD_TYPE }}" == "main" ]; then
                            ${{ secrets.PROD_KEY_ALIAS }}
                             elif [ "${{ env.BUILD_TYPE }}" == "staging" ]; then
                            ${{ secrets.PROD_KEYSTORE_PASSWORD }}
                            else
                              ${{ secrets.PROD_KEYSTORE_PASSWORD }}
                            fi
          KEY_PASSWORD: if [ "${{ env.BUILD_TYPE }}" == "main" ]; then
                            ${{ secrets.PROD_KEY_PASSWORD }}
                             elif [ "${{ env.BUILD_TYPE }}" == "staging" ]; then
                            ${{ secrets.PROD_KEYSTORE_PASSWORD }}
                            else
                              ${{ secrets.PROD_KEYSTORE_PASSWORD }}
                            fi

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_TYPE }}-release.apk
          path: app/build/outputs/apk/release/app-release.apk
  
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Get prod build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BUILD_TYPE }}-release.apk

      - name: Deploy code
        run: echo "...Deployed"
